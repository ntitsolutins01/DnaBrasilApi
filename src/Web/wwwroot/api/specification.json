{
  "x-generator": "NSwag v13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "DnaBrasil API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/Alunos": {
      "post": {
        "tags": [
          "Alunos"
        ],
        "operationId": "CreateAluno",
        "requestBody": {
          "x-name": "command",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAlunoCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Alunos/{id}": {
      "put": {
        "tags": [
          "Alunos"
        ],
        "operationId": "UpdateAluno",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAlunoCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "Alunos"
        ],
        "operationId": "DeleteAluno",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Alunos/Ambientes": {
      "put": {
        "tags": [
          "Alunos"
        ],
        "operationId": "UpdateAlunoAmbientes",
        "requestBody": {
          "x-name": "command",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAlunoAmbientesCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Alunos/Matricula": {
      "post": {
        "tags": [
          "Alunos"
        ],
        "operationId": "CreateMatricula",
        "requestBody": {
          "x-name": "command",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMatriculaCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Alunos/Matricula/{id}": {
      "put": {
        "tags": [
          "Alunos"
        ],
        "operationId": "UpdateMatricula",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMatriculaCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Alunos/Voucher": {
      "post": {
        "tags": [
          "Alunos"
        ],
        "operationId": "CreateVoucher",
        "requestBody": {
          "x-name": "command",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVoucherCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Alunos"
        ],
        "operationId": "UpdateAlunoDeficiencias",
        "requestBody": {
          "x-name": "command",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAlunoDeficienciasCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Alunos/Voucher/{id}": {
      "put": {
        "tags": [
          "Alunos"
        ],
        "operationId": "UpdateVoucher",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVoucherCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/TodoItems": {
      "get": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "GetTodoItemsWithPagination",
        "parameters": [
          {
            "name": "ListId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfTodoItemBriefDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "CreateTodoItem",
        "requestBody": {
          "x-name": "command",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoItemCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoItems/{id}": {
      "put": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "UpdateTodoItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoItemCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "DeleteTodoItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoItems/UpdateDetail/{id}": {
      "put": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "UpdateTodoItemDetail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoItemDetailCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoLists": {
      "get": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "GetTodoLists",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodosVm"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "CreateTodoList",
        "requestBody": {
          "x-name": "command",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoListCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoLists/{id}": {
      "put": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "UpdateTodoList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoListCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "DeleteTodoList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersRegister",
        "requestBody": {
          "x-name": "registration",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersLogin",
        "parameters": [
          {
            "name": "useCookies",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "useSessionCookies",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "login",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/refresh": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersRefresh",
        "requestBody": {
          "x-name": "refreshRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/confirmEmail": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "MapIdentityApi-/api/Users/confirmEmail",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "changedEmail",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Users/resendConfirmationEmail": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersResendConfirmationEmail",
        "requestBody": {
          "x-name": "resendRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendEmailRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Users/forgotPassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersForgotPassword",
        "requestBody": {
          "x-name": "resetRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/resetPassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersResetPassword",
        "requestBody": {
          "x-name": "resetRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/manage/2fa": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersManage2fa",
        "requestBody": {
          "x-name": "tfaRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoFactorRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Users/manage/info": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "GetApiUsersManageInfo",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersManageInfo",
        "requestBody": {
          "x-name": "infoRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfoRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/WeatherForecasts": {
      "get": {
        "tags": [
          "WeatherForecasts"
        ],
        "operationId": "GetWeatherForecasts",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CreateAlunoCommand": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "nome",
          "email",
          "sexo",
          "dtNascimento",
          "cpf",
          "status"
        ],
        "properties": {
          "aspNetUserId": {
            "type": "integer",
            "format": "int32"
          },
          "nome": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "nullable": false
          },
          "email": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^@]+@[^@]+$",
            "nullable": false
          },
          "sexo": {
            "type": "string",
            "maxLength": 1,
            "minLength": 1,
            "nullable": false
          },
          "dtNascimento": {
            "type": "string",
            "format": "date-time",
            "minLength": 1,
            "nullable": false
          },
          "nomeMae": {
            "type": "string",
            "nullable": true
          },
          "nomePai": {
            "type": "string",
            "nullable": true
          },
          "cpf": {
            "type": "string",
            "maxLength": 14,
            "minLength": 1,
            "nullable": false
          },
          "telefone": {
            "type": "string",
            "maxLength": 14,
            "minLength": 0,
            "pattern": "((\\(\\d{3}\\) ?)|(\\d{3}-))?\\d{3}-\\d{4}",
            "nullable": true
          },
          "celular": {
            "type": "string",
            "maxLength": 14,
            "minLength": 0,
            "pattern": "((\\(\\d{3}\\) ?)|(\\d{3}-))?\\d{3}-\\d{4}",
            "nullable": true
          },
          "cep": {
            "type": "string",
            "maxLength": 9,
            "minLength": 0,
            "nullable": true
          },
          "endereco": {
            "type": "string",
            "maxLength": 200,
            "minLength": 0,
            "nullable": true
          },
          "numero": {
            "type": "string",
            "nullable": true
          },
          "bairro": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0,
            "nullable": true
          },
          "redeSocial": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "boolean",
            "minLength": 1,
            "nullable": false
          },
          "habilitado": {
            "type": "boolean"
          },
          "deficiencias": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Deficiencia"
            }
          },
          "ambientes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Ambiente"
            }
          },
          "parceiro": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Parceiro"
              }
            ]
          },
          "etnia": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Deficiencia": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "nome": {
                "type": "string"
              },
              "status": {
                "type": "boolean"
              },
              "alunos": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Aluno"
                }
              }
            }
          }
        ]
      },
      "Aluno": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "aspNetUserId": {
                "type": "integer",
                "format": "int32"
              },
              "municipio": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Municipio"
                  }
                ]
              },
              "nome": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "sexo": {
                "type": "string"
              },
              "dtNascimento": {
                "type": "string",
                "format": "date-time"
              },
              "nomeMae": {
                "type": "string",
                "nullable": true
              },
              "nomePai": {
                "type": "string",
                "nullable": true
              },
              "cpf": {
                "type": "string",
                "nullable": true
              },
              "telefone": {
                "type": "string",
                "nullable": true
              },
              "celular": {
                "type": "string",
                "nullable": true
              },
              "cep": {
                "type": "string",
                "nullable": true
              },
              "endereco": {
                "type": "string",
                "nullable": true
              },
              "numero": {
                "type": "string",
                "nullable": true
              },
              "bairro": {
                "type": "string",
                "nullable": true
              },
              "redeSocial": {
                "type": "string",
                "nullable": true
              },
              "url": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "boolean"
              },
              "habilitado": {
                "type": "boolean"
              },
              "deficiencias": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Deficiencia"
                }
              },
              "ambientes": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Ambiente"
                }
              },
              "parceiro": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Parceiro"
                  }
                ]
              },
              "etnia": {
                "type": "integer",
                "format": "int32"
              },
              "contratos": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Contrato"
                }
              },
              "matricula": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Matricula"
                  }
                ]
              },
              "voucher": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Voucher"
                  }
                ]
              },
              "dependencia": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Dependencia"
                  }
                ]
              }
            }
          }
        ]
      },
      "Municipio": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "codigo": {
                "type": "integer",
                "format": "int32"
              },
              "nome": {
                "type": "string",
                "nullable": true
              },
              "estado": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Estado"
                  }
                ]
              }
            }
          }
        ]
      },
      "Estado": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "sigla": {
                "type": "string",
                "nullable": true
              },
              "nome": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BaseAuditableEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEntity"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "created": {
                "type": "string",
                "format": "date-time"
              },
              "createdBy": {
                "type": "string",
                "nullable": true
              },
              "lastModified": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BaseEntity": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "domainEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseEvent"
            }
          }
        }
      },
      "BaseEvent": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false
      },
      "Ambiente": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "nome": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "boolean"
              },
              "alunos": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Aluno"
                }
              },
              "profissionais": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Profissional"
                }
              }
            }
          }
        ]
      },
      "Profissional": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "aspNetUserId": {
                "type": "integer",
                "format": "int32"
              },
              "nome": {
                "type": "string"
              },
              "dtNascimento": {
                "type": "string",
                "format": "date-time"
              },
              "email": {
                "type": "string"
              },
              "sexo": {
                "type": "string"
              },
              "cpf": {
                "type": "string"
              },
              "telefone": {
                "type": "string",
                "nullable": true
              },
              "celular": {
                "type": "string",
                "nullable": true
              },
              "endereco": {
                "type": "string",
                "nullable": true
              },
              "numero": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "cep": {
                "type": "string",
                "nullable": true
              },
              "bairro": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "boolean"
              },
              "municipio": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Municipio"
                  }
                ]
              },
              "ambientes": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Ambiente"
                }
              },
              "habilitado": {
                "type": "boolean",
                "nullable": true
              },
              "contratos": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Contrato"
                }
              }
            }
          }
        ]
      },
      "Contrato": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "nome": {
                "type": "string"
              },
              "descricao": {
                "type": "string",
                "nullable": true
              },
              "dtIni": {
                "type": "string",
                "format": "date-time"
              },
              "dtFim": {
                "type": "string",
                "format": "date-time"
              },
              "anexo": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "boolean"
              },
              "locais": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Local"
                }
              },
              "alunos": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Aluno"
                }
              },
              "profissionais": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Profissional"
                }
              }
            }
          }
        ]
      },
      "Local": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "nome": {
                "type": "string",
                "nullable": true
              },
              "descricao": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "boolean"
              },
              "municipio": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Municipio"
                  }
                ]
              },
              "contratos": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Contrato"
                }
              }
            }
          }
        ]
      },
      "Parceiro": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "aspNetUserId": {
                "type": "integer",
                "format": "int32"
              },
              "municipio": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Municipio"
                  }
                ]
              },
              "nome": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "tipoParceria": {
                "type": "integer",
                "format": "int32"
              },
              "tipoPessoa": {
                "type": "string"
              },
              "cpfCnpj": {
                "type": "string"
              },
              "telefone": {
                "type": "string",
                "nullable": true
              },
              "celular": {
                "type": "string",
                "nullable": true
              },
              "cep": {
                "type": "string",
                "nullable": true
              },
              "endereco": {
                "type": "string",
                "nullable": true
              },
              "numero": {
                "type": "integer",
                "format": "int32"
              },
              "bairro": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "boolean"
              },
              "habilitado": {
                "type": "boolean",
                "nullable": true
              },
              "alunos": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Aluno"
                }
              }
            }
          }
        ]
      },
      "Matricula": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "dtVencimentoParq": {
                "type": "string",
                "format": "date-time"
              },
              "dtVencimentoAtestadoMedico": {
                "type": "string",
                "format": "date-time"
              },
              "nomeResponsavel1": {
                "type": "string",
                "nullable": true
              },
              "parentescoResponsavel1": {
                "type": "string",
                "nullable": true
              },
              "cpfResponsavel1": {
                "type": "string",
                "nullable": true
              },
              "nomeResponsavel2": {
                "type": "string",
                "nullable": true
              },
              "parentescoResponsavel2": {
                "type": "string",
                "nullable": true
              },
              "cpfResponsavel2": {
                "type": "string",
                "nullable": true
              },
              "nomeResponsavel3": {
                "type": "string",
                "nullable": true
              },
              "parentescoResponsavel3": {
                "type": "string",
                "nullable": true
              },
              "cpfResponsavel3": {
                "type": "string",
                "nullable": true
              },
              "local": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Local"
                  }
                ]
              },
              "aluno": {
                "$ref": "#/components/schemas/Aluno"
              }
            }
          }
        ]
      },
      "Voucher": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "local": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Local"
                  }
                ]
              },
              "descricao": {
                "type": "string",
                "nullable": true
              },
              "turma": {
                "type": "string",
                "nullable": true
              },
              "serie": {
                "type": "string",
                "nullable": true
              },
              "aluno": {
                "$ref": "#/components/schemas/Aluno"
              }
            }
          }
        ]
      },
      "Dependencia": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "doencas": {
                "type": "string",
                "nullable": true
              },
              "nacionalidade": {
                "type": "string",
                "nullable": true
              },
              "naturalidade": {
                "type": "string",
                "nullable": true
              },
              "nomeEscola": {
                "type": "string",
                "nullable": true
              },
              "tipoEscola": {
                "type": "integer",
                "format": "int32"
              },
              "tipoEscolaridade": {
                "type": "integer",
                "format": "int32"
              },
              "turno": {
                "type": "string",
                "nullable": true
              },
              "serie": {
                "type": "string",
                "nullable": true
              },
              "ano": {
                "type": "string",
                "nullable": true
              },
              "turma": {
                "type": "string",
                "nullable": true
              },
              "termoCompromisso": {
                "type": "boolean",
                "nullable": true
              },
              "autorizacaoUsoImagemAudio": {
                "type": "boolean",
                "nullable": true
              },
              "autorizacaoUsoIndicadores": {
                "type": "boolean",
                "nullable": true
              },
              "autorizacaoSaida": {
                "type": "boolean",
                "nullable": true
              },
              "aluno": {
                "$ref": "#/components/schemas/Aluno"
              }
            }
          }
        ]
      },
      "UpdateAlunoCommand": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "nome",
          "email",
          "sexo",
          "dtNascimento",
          "cpf",
          "status"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "aspNetUserId": {
            "type": "integer",
            "format": "int32"
          },
          "nome": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "nullable": false
          },
          "email": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^@]+@[^@]+$",
            "nullable": false
          },
          "sexo": {
            "type": "string",
            "maxLength": 1,
            "minLength": 1,
            "nullable": false
          },
          "dtNascimento": {
            "type": "string",
            "format": "date-time",
            "minLength": 1,
            "nullable": false
          },
          "nomeMae": {
            "type": "string",
            "nullable": true
          },
          "nomePai": {
            "type": "string",
            "nullable": true
          },
          "cpf": {
            "type": "string",
            "maxLength": 14,
            "minLength": 1,
            "nullable": false
          },
          "telefone": {
            "type": "string",
            "maxLength": 14,
            "minLength": 0,
            "pattern": "((\\(\\d{3}\\) ?)|(\\d{3}-))?\\d{3}-\\d{4}",
            "nullable": true
          },
          "celular": {
            "type": "string",
            "maxLength": 14,
            "minLength": 0,
            "pattern": "((\\(\\d{3}\\) ?)|(\\d{3}-))?\\d{3}-\\d{4}",
            "nullable": true
          },
          "cep": {
            "type": "string",
            "maxLength": 9,
            "minLength": 0,
            "nullable": true
          },
          "endereco": {
            "type": "string",
            "maxLength": 200,
            "minLength": 0,
            "nullable": true
          },
          "numero": {
            "type": "string",
            "nullable": true
          },
          "bairro": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0,
            "nullable": true
          },
          "redeSocial": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "boolean",
            "minLength": 1,
            "nullable": false
          },
          "habilitado": {
            "type": "boolean"
          },
          "deficiencias": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Deficiencia"
            }
          },
          "ambientes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Ambiente"
            }
          },
          "parceiro": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Parceiro"
              }
            ]
          }
        }
      },
      "UpdateAlunoAmbientesCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "alunoId": {
            "type": "integer",
            "format": "int32"
          },
          "ambientes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Ambiente"
            }
          }
        }
      },
      "CreateMatriculaCommand": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "dtVencimentoParq",
          "dtVencimentoAtestadoMedico",
          "nomeResponsavel1",
          "parentescoResponsavel1",
          "cpfResponsavel1",
          "nomeResponsavel2",
          "parentescoResponsavel2",
          "cpfResponsavel2",
          "nomeResponsavel3",
          "parentescoResponsavel3",
          "cpfResponsavel3"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "dtVencimentoParq": {
            "type": "string",
            "format": "date-time",
            "minLength": 1,
            "nullable": false
          },
          "dtVencimentoAtestadoMedico": {
            "type": "string",
            "format": "date-time",
            "minLength": 1,
            "nullable": false
          },
          "nomeResponsavel1": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "nullable": false
          },
          "parentescoResponsavel1": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "nullable": false
          },
          "cpfResponsavel1": {
            "type": "string",
            "maxLength": 14,
            "minLength": 1,
            "nullable": false
          },
          "nomeResponsavel2": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "nullable": false
          },
          "parentescoResponsavel2": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "nullable": false
          },
          "cpfResponsavel2": {
            "type": "string",
            "maxLength": 14,
            "minLength": 1,
            "nullable": false
          },
          "nomeResponsavel3": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "nullable": false
          },
          "parentescoResponsavel3": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "nullable": false
          },
          "cpfResponsavel3": {
            "type": "string",
            "maxLength": 14,
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "UpdateMatriculaCommand": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "dtVencimentoParq",
          "dtVencimentoAtestadoMedico",
          "nomeResponsavel1",
          "parentescoResponsavel1",
          "cpfResponsavel1",
          "nomeResponsavel2",
          "parentescoResponsavel2",
          "cpfResponsavel2",
          "nomeResponsavel3",
          "parentescoResponsavel3",
          "cpfResponsavel3"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "dtVencimentoParq": {
            "type": "string",
            "format": "date-time",
            "minLength": 1,
            "nullable": false
          },
          "dtVencimentoAtestadoMedico": {
            "type": "string",
            "format": "date-time",
            "minLength": 1,
            "nullable": false
          },
          "nomeResponsavel1": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "nullable": false
          },
          "parentescoResponsavel1": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "nullable": false
          },
          "cpfResponsavel1": {
            "type": "string",
            "maxLength": 14,
            "minLength": 1,
            "nullable": false
          },
          "nomeResponsavel2": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "nullable": false
          },
          "parentescoResponsavel2": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "nullable": false
          },
          "cpfResponsavel2": {
            "type": "string",
            "maxLength": 14,
            "minLength": 1,
            "nullable": false
          },
          "nomeResponsavel3": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "nullable": false
          },
          "parentescoResponsavel3": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "nullable": false
          },
          "cpfResponsavel3": {
            "type": "string",
            "maxLength": 14,
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "CreateVoucherCommand": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "descricao",
          "turma",
          "serie"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "local": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Local"
              }
            ]
          },
          "descricao": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "nullable": false
          },
          "turma": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "nullable": false
          },
          "serie": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "nullable": false
          },
          "aluno": {
            "$ref": "#/components/schemas/Aluno"
          }
        }
      },
      "UpdateVoucherCommand": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "descricao",
          "turma",
          "serie"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "local": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Local"
              }
            ]
          },
          "descricao": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "nullable": false
          },
          "turma": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "nullable": false
          },
          "serie": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "UpdateAlunoDeficienciasCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "deficiencias": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Deficiencia"
            }
          }
        }
      },
      "PaginatedListOfTodoItemBriefDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TodoItemBriefDto"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "TodoItemBriefDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "listId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "done": {
            "type": "boolean"
          }
        }
      },
      "CreateTodoItemCommand": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title"
        ],
        "properties": {
          "listId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "UpdateTodoItemCommand": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "nullable": false
          },
          "done": {
            "type": "boolean"
          }
        }
      },
      "UpdateTodoItemDetailCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "listId": {
            "type": "integer",
            "format": "int32"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityLevel"
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PriorityLevel": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "None",
          "Low",
          "Medium",
          "High"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "TodosVm": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "priorityLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LookupDto"
            }
          },
          "lists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TodoListDto"
            }
          }
        }
      },
      "LookupDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TodoListDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "colour": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TodoItemDto"
            }
          }
        }
      },
      "TodoItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "listId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "done": {
            "type": "boolean"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateTodoListCommand": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title"
        ],
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "UpdateTodoListCommand": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "HttpValidationProblemDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProblemDetails"
          },
          {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "properties": {
              "errors": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "AccessTokenResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tokenType": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          },
          "expiresIn": {
            "type": "integer",
            "format": "int64"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "twoFactorCode": {
            "type": "string",
            "nullable": true
          },
          "twoFactorRecoveryCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RefreshRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "ResendEmailRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "ResetPasswordRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "resetCode": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "TwoFactorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sharedKey": {
            "type": "string"
          },
          "recoveryCodesLeft": {
            "type": "integer",
            "format": "int32"
          },
          "recoveryCodes": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "isTwoFactorEnabled": {
            "type": "boolean"
          },
          "isMachineRemembered": {
            "type": "boolean"
          }
        }
      },
      "TwoFactorRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enable": {
            "type": "boolean",
            "nullable": true
          },
          "twoFactorCode": {
            "type": "string",
            "nullable": true
          },
          "resetSharedKey": {
            "type": "boolean"
          },
          "resetRecoveryCodes": {
            "type": "boolean"
          },
          "forgetMachine": {
            "type": "boolean"
          }
        }
      },
      "InfoResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "isEmailConfirmed": {
            "type": "boolean"
          },
          "claims": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "InfoRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "newEmail": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          },
          "oldPassword": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WeatherForecast": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32"
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}